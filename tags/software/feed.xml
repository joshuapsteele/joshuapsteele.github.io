<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Software on Joshua P. Steele</title><link>https://joshuapsteele.github.io/tags/software/</link><description>Recent content in Software on Joshua P. Steele</description><generator>Hugo -- 0.135.0</generator><language>en-US</language><lastBuildDate>Sat, 18 Mar 2023 12:50:58 +0000</lastBuildDate><atom:link href="https://joshuapsteele.github.io/tags/software/feed.xml" rel="self" type="application/rss+xml"/><item><title>Discover Learn X in Y Minutes: An Invaluable Resource for Programmers</title><link>https://joshuapsteele.github.io/discover-learn-x-in-y-minutes-an-invaluable-resource-for-programmers/</link><pubDate>Sat, 18 Mar 2023 12:50:58 +0000</pubDate><guid>https://joshuapsteele.github.io/discover-learn-x-in-y-minutes-an-invaluable-resource-for-programmers/</guid><description>&lt;p>As a programmer or someone aspiring to be one, you’re always on the lookout for valuable resources to help you learn new languages and tools. Today, I’m excited to introduce you to &lt;a href="https://learnxinyminutes.com/">learnxinyminutes.com&lt;/a>, a must-visit website for anyone interested in coding. This site offers concise, code-focused tutorials for dozens of programming languages and essential tools, making it a perfect learning companion for beginners and experienced coders alike.&lt;/p>
&lt;h2 id="quick-and-efficient-learning">Quick and Efficient Learning&lt;/h2>
&lt;p>Learn X in Y Minutes understands that time is precious, which is why it provides:&lt;/p></description></item><item><title>Ask Me Anything: Software Engineering Questions from a Coding Bootcamp Student</title><link>https://joshuapsteele.github.io/ask-me-anything-software-engineering-questions-from-a-coding-bootcamp-student/</link><pubDate>Thu, 09 Mar 2023 14:10:31 +0000</pubDate><guid>https://joshuapsteele.github.io/ask-me-anything-software-engineering-questions-from-a-coding-bootcamp-student/</guid><description>&lt;p>I’m posting my answers to these software engineering questions here, just in case anyone else finds them helpful! (Also, it gives me another link to share when I get asked these kinds of questions.)&lt;/p>
&lt;h2 id="how-did-you-become-interested-in-software-engineering">How did you become interested in software engineering?&lt;/h2>
&lt;p>I wrote a bit about &lt;a href="https://joshuapsteele.com/my-coding-bootcamp-journey-how-a-pastor-became-a-programmer/">my coding bootcamp journey&lt;/a> in a previous post.&lt;/p>
&lt;p>Part of my interest in software engineering is/was related to the particular path my journey took. That is, while studying Bible/religion/theology, I always knew that “bi-vocational ministry” (ministering in a church setting while also making money from another profession) was on the table.&lt;/p></description></item><item><title>My Coding Bootcamp Journey: How a Pastor Became a Programmer</title><link>https://joshuapsteele.github.io/my-coding-bootcamp-journey-how-a-pastor-became-a-programmer/</link><pubDate>Fri, 03 Feb 2023 17:42:02 +0000</pubDate><guid>https://joshuapsteele.github.io/my-coding-bootcamp-journey-how-a-pastor-became-a-programmer/</guid><description>&lt;p>When I changed my major from Mechanical Engineering to Bible shortly before my first semester of college, I realized that what I was studying was not going to make me rich.&lt;/p>
&lt;p>So, throughout undergrad, seminary, and into a Ph.D. program in theology, the notion of “bi-vocational ministry” (serving the church while also making money outside of the church doing something else) was on my radar screen.&lt;/p>
&lt;p>In fact, for a few months between finishing seminary and starting my Ph.D. program, I tried to teach myself the basics of web design (HTML, CSS, JavaScript) and Ruby on Rails. (I signed up for an account on &lt;a href="https://teamtreehouse.com/">Treehouse&lt;/a> and on &lt;a href="https://www.freecodecamp.org/">freeCodeCamp&lt;/a> and I got to work!)&lt;/p></description></item><item><title>Logos 10 Bible Software: The Ultimate Theological Learning Tool</title><link>https://joshuapsteele.github.io/logos-10-bible-software-the-ultimate-theological-learning-tool/</link><pubDate>Thu, 22 Dec 2022 13:46:21 +0000</pubDate><guid>https://joshuapsteele.github.io/logos-10-bible-software-the-ultimate-theological-learning-tool/</guid><description>&lt;p>&lt;strong>TL;DR: If you’re serious about biblical and theological studies, you should invest in Logos 10 Bible Software. &lt;a href="https://partners.faithlife.com/click.track?CID=431490&amp;amp;AFID=529204">Do so via my exclusive partner offer for Logos 10 here!&lt;/a>&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>If I could go back in time and chat with Joshua Steele when he was a Bible &amp;amp; Spanish major in college, there are a few things I’d tell my younger self:&lt;/p>
&lt;ol>
&lt;li>Quit laughing at &lt;em>How to Read a Book&lt;/em> by Mortimer J. Adler and READ the thing.&lt;/li>
&lt;li>Baba ghanoush is superior to hummus.&lt;/li>
&lt;li>Study computer science sooner rather than later.&lt;/li>
&lt;li>Bite the bullet and INVEST IN A LOGOS BIBLE SOFTWARE LIBRARY.&lt;/li>
&lt;/ol>
&lt;p>Don’t get me wrong. I love physical books as much as anyone, and I own quite a few (hundred)!&lt;/p></description></item><item><title>Software Testing: Possibilities, Problems, and Principles</title><link>https://joshuapsteele.github.io/software-testing-possibilities-problems-and-principles/</link><pubDate>Wed, 21 Dec 2022 21:08:05 +0000</pubDate><guid>https://joshuapsteele.github.io/software-testing-possibilities-problems-and-principles/</guid><description>&lt;p>Note: Throughout what follows, I am heavily indebted to two books in particular: &lt;a href="https://www.manning.com/books/unit-testing">Unit Testing: Principles, Practices, and Patterns&lt;/a> by &lt;a href="https://twitter.com/vkhorikov?lang=en">Vladimir Khorikov&lt;/a> (Manning Publications, 2020) and &lt;a href="https://www.manning.com/books/effective-software-testing">Effective Software Testing: A Developer’s Guide&lt;/a> by &lt;a href="https://twitter.com/mauricioaniche">Mauricio Aniche&lt;/a> (Manning Publications, 2022). In fact, this overview of software testing should be viewed as a distillation of Khorikov and Aniche.&lt;/p>
&lt;figure>![Khorikov-UT-HI.png](https://res.craft.do/user/full/032236cd-2bcc-fa12-9dfe-e5564a597e07/doc/836657DD-FF3A-4CE5-8565-F6945FE45D6A/21ECE62D-593E-4825-A549-6312F555D284_2/ZCHd2JrecxcxPA1c35H2wTV0FrAzdktnxui31U1rO00z/Khorikov-UT-HI.png)&lt;figcaption>Khorikov-UT-HI.png&lt;/figcaption>&lt;/figure>&lt;figure>![Aniche-HI.png](https://res.craft.do/user/full/032236cd-2bcc-fa12-9dfe-e5564a597e07/doc/836657DD-FF3A-4CE5-8565-F6945FE45D6A/ED1FC92B-C9A0-4CDC-B13D-5AA3940FF3E7_2/FE2KZaydLyYRh1ydJKyDIvx4y3gaQLh82funASwXFqoz/Aniche-HI.png)&lt;figcaption>Aniche-HI.png&lt;/figcaption>&lt;/figure>---
&lt;h2 id="software-testing-our-fields-least-sexy-superpower">Software Testing, Our Field’s Least-Sexy Superpower&lt;/h2>
&lt;p>Coming into software development from a background in the humanities, automated software testing struck me as a kind of superpower. Until, that is, I had to write my first software test!&lt;/p></description></item></channel></rss>